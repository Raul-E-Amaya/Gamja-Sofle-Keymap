#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        delete_line: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(HOME)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LS(HOME)>;

            label = "DELETE_LINE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC-00 {
            bindings = <
&gresc        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5              &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB       &kp Q   &kp W   &kp E   &kp R      &kp T               &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LEFT_ALT  &kp A   &kp S   &kp D   &kp F      &kp G               &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT     &kp Z   &kp X   &kp C   &kp V      &kp B               &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
&kp C_MUTE    &trans  &trans  &mo 1   &kp LCTRL  &kp LEFT_COMMAND    &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "MAC-00";
        };

        MAC-01 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "MAC-01";
            sensor-bindings = <&scroll_encoder>;
        };

        MAC-02 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        WIN-00 {
            display-name = "WIN-00";
            bindings = <
&gresc        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB       &kp Q   &kp W   &kp E   &kp R      &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LEFT_ALT  &kp A   &kp S   &kp D   &kp F      &kp G     &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT     &kp Z   &kp X   &kp C   &kp V      &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
&kp C_MUTE    &trans  &trans  &mo 1   &kp LCTRL  &mo 4     &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        WIN-CTRL {
            display-name = "WIN-CTRL";
            bindings = <
&gresc        &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)    &kp UP_ARROW     &kp LC(N6)  &kp LC(N7)  &kp LC(N8)     &kp LC(N9)   &kp LC(N0)    &kp MINUS
&kp LC(TAB)   &kp LC(Q)   &kp LC(W)   &kp LC(E)   &kp LC(R)   &kp LC(T)     &kp DOWN_ARROW   &kp LC(Y)   &kp LC(U)   &kp LC(I)      &kp LC(O)    &kp LC(P)     &delete_line
&kp LEFT_ALT  &kp LC(A)   &kp LC(S)   &kp LC(D)   &kp LC(F)   &kp LC(G)     &kp LEFT_ARROW   &kp LC(H)   &kp LC(J)   &kp LC(K)      &kp LC(L)    &kp LC(SEMI)  &kp LC(APOS)
&mo 5         &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(B)     &kp RIGHT_ARROW  &kp LC(N)   &kp LC(M)   &kp LC(COMMA)  &kp LC(DOT)  &kp LC(FSLH)  &kp RSHIFT
&kp C_MUTE    &trans      &trans      &trans      &trans      &trans        &kp ENTER        &kp SPACE   &kp ENTER   &mo 2          &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        WIN-SHIFT {
            display-name = "WIN-SHIFT";
            bindings = <
&gresc        &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &kp UP_ARROW     &kp LS(N6)  &kp LS(N7)  &kp LS(N8)     &kp LS(N9)   &kp LS(N0)    &kp LS(MINUS)
&kp TAB       &kp LS(Q)   &kp LS(W)   &kp LS(E)   &kp LS(R)   &kp LS(T)     &kp DOWN_ARROW   &kp LS(Y)   &kp LS(U)   &kp LS(I)      &kp LS(O)    &kp LS(P)     &kp LS(BSPC)
&kp LEFT_ALT  &kp LS(A)   &kp LS(S)   &kp LS(D)   &kp LS(F)   &kp LS(G)     &kp LEFT_ARROW   &kp LS(H)   &kp LS(J)   &kp LS(K)      &kp LS(L)    &kp LS(SEMI)  &kp LS(APOS)
&kp LSHFT     &kp LS(Z)   &kp LS(X)   &kp LS(C)   &kp LS(V)   &kp LS(B)     &kp RIGHT_ARROW  &kp LS(N)   &kp LS(M)   &kp LS(COMMA)  &kp LS(DOT)  &kp LS(FSLH)  &kp RSHIFT
&kp C_MUTE    &trans      &trans      &mo 1       &kp LCTRL   &mo 4         &kp ENTER        &kp SPACE   &kp ENTER   &mo 2          &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        WIN-CTRL-SHIFT {
            display-name = "WIN-CTRL-SHIFT";
            bindings = <
&gresc        &kp LS(LC(N1))  &kp LS(LC(AT))  &kp LS(LC(N3))  &kp LS(LC(N4))  &kp LS(LC(N5))    &kp UP_ARROW     &kp LS(LC(CARET))  &kp LS(LC(N7))  &kp LS(LC(N8))     &kp LS(LC(N9))   &kp LS(LC(N0))    &kp LS(LC(MINUS))
&kp TAB       &kp LS(LC(Q))   &kp LS(LC(W))   &kp LS(LC(E))   &kp LS(LC(R))   &kp LS(LC(T))     &kp DOWN_ARROW   &kp LS(LC(Y))      &kp LS(LC(U))   &kp LS(LC(I))      &kp LS(LC(O))    &kp LS(LC(P))     &kp LS(LC(BSPC))
&kp LEFT_ALT  &kp LS(LC(A))   &kp LS(LC(S))   &kp LS(LC(D))   &kp LS(LC(F))   &kp LS(LC(G))     &kp LEFT_ARROW   &kp LS(LC(H))      &kp LS(LC(J))   &kp LS(LC(K))      &kp LS(LC(L))    &kp LS(LC(SEMI))  &kp LS(LC(SQT))
&kp LSHFT     &kp LS(LC(Z))   &kp LS(LC(X))   &kp LS(LC(C))   &kp LS(LC(V))   &kp LS(LC(B))     &kp RIGHT_ARROW  &kp LS(LC(N))      &kp LS(LC(M))   &kp LS(LC(COMMA))  &kp LS(LC(DOT))  &kp LS(LC(FSLH))  &kp RSHIFT
&kp C_MUTE    &trans          &trans          &mo 1           &kp LCTRL       &mo 4             &kp ENTER        &kp SPACE          &kp ENTER       &mo 2              &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        WIN-ALT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        WIN-GUI {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        WIN_CTRL-SHIFT {
            if-layers = <4 5>;
            then-layer = <6>;
        };
    };
};
